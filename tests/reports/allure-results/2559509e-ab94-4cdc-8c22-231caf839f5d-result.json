{"name": "test_process_excel_urls", "status": "broken", "statusDetails": {"message": "AttributeError: 'TestURLProcessor' object has no attribute '_format_failed_urls'", "trace": "self = <url_processor_project.tests.test_url_processor.TestURLProcessor object at 0x00000210C0A12AB0>\nexcel_urls = [('oceanofgames.com', 2), ('google.com', 3), ('http://www.liquidgeneration.com/', 4), ('https://httpstat.us/403', 5)]\n\n    @allure.story(\"Process URLs from Excel with Error Detection\")\n    def test_process_excel_urls(self, excel_urls):\n        \"\"\"Test processing URLs from Excel file with error detection\"\"\"\n        try:\n            # Initialize Configuration and backup previous reports\n            Configuration.ensure_directories()\n            Configuration.backup_previous_reports()\n    \n            results = []\n            total_urls = len(excel_urls)\n            print(f\"\\nTotal URLs to process: {total_urls}\")\n    \n            # Process each URL\n            for url, row_number in excel_urls:\n                with allure.step(f\"Processing URL {row_number - 1} of {total_urls}: {url}\"):\n                    print(f\"\\nProcessing URL {row_number - 1} of {total_urls}: {url}\")\n    \n                    result = WebAutomation.process_url(url, row_number - 1)\n                    results.append(result)\n    \n                    # Add detailed Allure report\n                    status_color = \"green\" if result['status'] == 'Success' else \"red\"\n                    allure.attach(\n                        body=f\"\"\"\n                        URL: {url}\n                        Status: {result['status']}\n                        Error: {result['error'] if result['error'] else 'None'}\n                        Load Time: {result.get('load_time', 0):.2f}ms\n                        \"\"\",\n                        name=f\"URL Test Result {row_number - 1}\",\n                        attachment_type=allure.attachment_type.TEXT\n                    )\n    \n                    # Wait between URLs\n                    if row_number < total_urls:\n                        wait_time = Configuration.get_config()[\"wait_between_urls\"]\n                        print(f\"Waiting {wait_time} seconds before next URL...\")\n                        time.sleep(wait_time)\n    \n            # Generate summary\n            successful = sum(1 for r in results if r['status'] == 'Success')\n            failed = len(results) - successful\n    \n            summary = f\"\"\"\n            Processing Summary:\n            Total URLs processed: {len(results)}\n            Successfully loaded: {successful}\n            Failed to load: {failed}\n            Success rate: {(successful / len(results) * 100 if results else 0):.2f}%\n    \n            Failed URLs:\n>           {self._format_failed_urls(results)}\n            \"\"\"\nE           AttributeError: 'TestURLProcessor' object has no attribute '_format_failed_urls'\n\ntest_url_processor.py:93: AttributeError"}, "description": "Test processing URLs from Excel file with error detection", "steps": [{"name": "Ensuring directories exist", "status": "passed", "attachments": [{"name": "Directory Creation", "source": "02281093-35e6-492e-9ffd-53951fb9ca62-attachment.txt", "type": "text/plain"}], "start": 1730949943473, "stop": 1730949943476}, {"name": "Processing URL 1 of 4: oceanofgames.com", "status": "passed", "attachments": [{"name": "Screenshot_oceanofgames_com", "source": "c42e9deb-c90b-49f2-98b9-d71f0a102bdd-attachment.png", "type": "image/png"}, {"name": "URL Test Result 1", "source": "839a0b29-0445-45d3-82fb-87d31847fe91-attachment.txt", "type": "text/plain"}], "start": 1730949943478, "stop": 1730949957906}, {"name": "Processing URL 2 of 4: google.com", "status": "passed", "attachments": [{"name": "Screenshot_google_com", "source": "33bc47dc-228a-4143-9e6b-d1c7474cfbcc-attachment.png", "type": "image/png"}, {"name": "URL Test Result 2", "source": "32109364-3aea-43e9-8618-e8a88a0afed3-attachment.txt", "type": "text/plain"}], "start": 1730949957906, "stop": 1730949970433}, {"name": "Processing URL 3 of 4: http://www.liquidgeneration.com/", "status": "passed", "attachments": [{"name": "Screenshot_liquidgeneration_com", "source": "aa2f5bc5-4368-4a18-a9fb-74ce7cec0927-attachment.png", "type": "image/png"}, {"name": "URL Test Result 3", "source": "d7abbb3e-3dfe-4315-99e7-fe3560ef7440-attachment.txt", "type": "text/plain"}], "start": 1730949970433, "stop": 1730949984804}, {"name": "Processing URL 4 of 4: https://httpstat.us/403", "status": "passed", "attachments": [{"name": "Screenshot_httpstat_us_403", "source": "cf499650-7126-4c76-b53c-0b439dfbf618-attachment.png", "type": "image/png"}, {"name": "URL Test Result 4", "source": "e9452fe7-2a7f-4d7b-9bd5-81f314157bf9-attachment.txt", "type": "text/plain"}], "start": 1730949984804, "stop": 1730949994805}], "attachments": [{"name": "Test Error", "source": "612573ef-ef5c-43f3-92fc-e3909c73fecf-attachment.txt", "type": "text/plain"}, {"name": "Error Details", "source": "baf707e1-504c-447a-bef9-36b8604794ce-attachment.txt", "type": "text/plain"}], "start": 1730949943473, "stop": 1730949994806, "uuid": "850ba29d-631c-4239-a54f-23753cae50b3", "historyId": "be5f01bbfe467b80211c2ce078a6b793", "testCaseId": "be5f01bbfe467b80211c2ce078a6b793", "fullName": "tests.test_url_processor.TestURLProcessor#test_process_excel_urls", "labels": [{"name": "story", "value": "Process URLs from Excel with Error Detection"}, {"name": "feature", "value": "URL Validation and Error Detection"}, {"name": "epic", "value": "URL Processing"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_url_processor"}, {"name": "subSuite", "value": "TestURLProcessor"}, {"name": "host", "value": "DESKTOP-BL4C2NE"}, {"name": "thread", "value": "18404-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_url_processor"}]}